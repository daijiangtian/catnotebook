def isPhoneNumber(text):
    if len(text) != 12:
        return False
    for i in range(0, 3):
        if not text[i].isdecimal():
            return False
    if text[3] != '-':
        return False
    for i in range(4, 7):
        if not text[i].isdecimal():
            return False
    if text[7] != '-':
         return False
    for i in range(8, 12):
        if not text[i].isdecimal():
         return False
    return True
print(isPhoneNumber('415-555-4242'))
print(isPhoneNumber('guji guji'))
message='call me at 415-555-1011 tomorrow.415-555-9999 is my office'
for i in range(len(message)):
    chunk=message[i:i+12]
    if isPhoneNumber(chunk):
        print('phone number found: '+ chunk)
print('Done')

import re
# phoneNumRegex=re.compile(r'\d\d\d-\d\d\d-\d\d\d\d')

def phoneNumRegex(text):
    NumRegex= re.compile(r'\d\d\d-\d\d\d-\d\d\d\d')
    N = NumRegex.search(text)
    print(N.group())
phoneNumRegex('my number is 415-555-4242')

#电话号码和E-mail地址提取程序
#位电话号码创建一个正则表达式
import pyperclip,re
phoneRegex=re.compile(r'''(
   (\d{3}|(\d{3}\))?
   (\s|-|\.)?
   (\d{3})
   (\s|-|\.)
   (\d{4})
   (\s*(ext|x|ext\.)\s*(\d{2,5}))?
   ))''', re.VERBOSE)

#为E-mail地址创建一个正则表达式
emailRegex=re.compile(r'''(
   [a-zA-Z0-9._%+-]+
   @
   [a-zA-Z0-9.-]+
   (\.[a-zA-Z]{2,4})
   )''',re.VERBOSE)

#在剪贴板文本中找到所有匹配
text=str(pyperclip.paste())
matches=[]
for groups in phoneRegex.findall(text):
    phoneNum='-'.join([groups[1],groups[3],groups[5]])
    if groups[8] !='':
        phoneNum+='x'+groups[8]
    matches.append(phoneNum)
for groups in emailRegex.findall(text):
    matches.append(groups[0])

#所有匹配连接成一个字符串，复制到剪贴板
if len(matches)>0:
    pyperclip.copy('\n'.join(matches))
    print('copied to clipboard:')
    print('\n'.join(matches))
else:
    print('no phone numbers or email addresses found.')

import shelve,pyperclip,sys
mcbshelf=shelve.open('mcb')
#保存剪贴板内容
if len(sys.argv)==3 and sys.argv[1].lower()=='save':
    mcbShelf[sys.argv[2]]=pyperclip.paste()
elif len(sys.argv)==2:
#列出关键字和加载关键字内容
  if sys.argv[1].lower()=='list':
      pyperclip.copy(str(list(mcbShelf.keys())))
  elif nsys.argv[1] in mcbShelf :
      pyperclip.copy(mcbShelf[sys.argv[1]])
mcbShelf.close()

处理
进口口文件夹
for folderName，子文件夹，os.walk中的文件名（'D：\\ Bin'）
    print('The current folder is '+folderName)
    for subfolder in subfolders:
        print('subfolder of'+folderName+':'+subfolder)
    for filename in filenames:
        print('file inside'+folderName+':'+filename)
    print('')
    
